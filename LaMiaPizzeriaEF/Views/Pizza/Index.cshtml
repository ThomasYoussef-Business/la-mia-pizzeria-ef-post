@model List<Pizza>
@{
    Layout = "_Header";

    async Task PizzaCard(Pizza pizza) {
        <div class="col-lg-4 col-12 d-flex justify-content-center">
            <div class="card" style="width: 18rem;">
                <img src="@pizza.PictureUrl" class="card-img-top" alt="...">
                <div class="card-body">
                    <h5 class="card-title">@pizza.Name</h5>
                    <p class="card-text">@pizza.Description</p>
                    <a href="@Url.Action("Pizza", "Pizza", new {id=pizza.Id})" class="btn btn-primary">
                        <span class="material-symbols-outlined m-0">
                            info
                        </span>
                    </a>
                    <a href="@Url.Action("Edit", "Pizza", new {id=pizza.Id})" class="btn btn-warning">
                        <span class="material-symbols-outlined m-0">
                            edit
                        </span>
                    </a>
                    <form asp-action="Delete" asp-controller="Pizza" asp-route-id="@pizza.Id" method="post" class="d-inline-block">
                        @Html.AntiForgeryToken()
                        <button type="submit" class="btn btn-danger">
                            <span class="material-symbols-outlined m-0">
                                delete_forever
                            </span>
                        </button>
                    </form>
                </div>
            </div>
        </div>
    }
}

<div class="container mt-5">
    <div class="row g-5 align-content-between">
        @if (Model == null || !Model.Any()) {
            <div class="col-lg-4 col-12 d-flex justify-content-center">
                <div class="card" style="width: 18rem;">
                    <div class="card-body">
                        <h5 class="card-title">Non ci sono pizze nell'applicazione :(</h5>
                        <p class="card-text">Chiedo scusa!</p>
                    </div>
                </div>
            </div>
        }
        else {
            foreach (var pizza in Model) {
                await PizzaCard(pizza);
            }
        }
    </div>
</div>